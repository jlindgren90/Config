#!/bin/sh

git_equal() {
    test -d "$1/.git" && test -d "$2/.git" || return 1
    oldrefs=$(git --git-dir="$1/.git" for-each-ref)
    newrefs=$(git --git-dir="$2/.git" for-each-ref)
    test -z "$oldrefs" || test -z "$newrefs" && return 1
    test "$oldrefs" = "$newrefs"
}

git_sync() {
    mkdir -p "$2"
    git --git-dir="$1/.git" -c gc.reflogExpire=0 \
     -c gc.reflogExpireUnreachable=0 -c gc.pruneExpire=now gc
    rsync -vrt --checksum --del "$1/.git" "$2/"
    git --git-dir="$2/.git" --work-tree="$2" checkout -- "$2"
    git --git-dir="$2/.git" --work-tree="$2" clean -fdx
}

root="$HOME/Backup"
curyear=`date +%Y`
dir="$1"

if test -z "$dir" ; then
    dir="${PWD##*/}"
fi

for file in * ; do
    found="no"
    loc=""
    for ((year=$curyear; year>=2008; year--)) do
        if test -e "$root/$year/$dir/$file" ; then
            if test "$found" = "no" ; then
                found="old"
                loc="$year ($dir)"
            fi
            if test "$found" = "old" && diff -r "$file" "$root/$year/$dir/$file" > /dev/null ; then
                found="yes"
                loc="$year ($dir)"
            fi
            if test "$found" = "old" && git_equal "$file" "$root/$year/$dir/$file" ; then
                found="yes"
                loc="$year ($dir)"
            fi
        fi
    done
    case "$found" in
        "no" ) echo " ! $file" ;;
        "old" ) echo " * $file: $loc" ;;
        "yes" ) echo "   $file: $loc" ;;
    esac
    if test "$found" != "yes" ; then
        read -p "      Sync $file to $root/$curyear/$dir/? (y/N)" yn
        case "$yn" in
            [Yy]* )
                if test -d "$file/.git" ; then
                    git_sync "$file" "$root/$curyear/$dir/$file"
                else
                    rsync -vrt --checksum --del "$file" "$root/$curyear/$dir/"
                fi
                ;;
            * )
                echo "      Skipping $file"
                ;;
        esac
    fi
done

echo
